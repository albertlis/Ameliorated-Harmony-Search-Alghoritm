    Do sprawdzenia w BandwidthDialog.py funkcja getMinMaxValues() czy wgl potrzebny ten if
(jakby co to jeszcze nie sprawdzałem, ale w poprzedniej wersji działało mi tylko bez if'a
choć był on trochę inaczej skonstruowany) ----> nie pamiętam o co chodziło dokładnie ale
 rzuca wyjątek w którejś specyficznej sytuacji. Dlatego jest konieczne żeby tam były zmienne.
Ew można przenieść inicjalizację do __init__ wtedy powinno być cacy (chyba bo serio nie pamiętam
o co chodziło). Na razie przeniosłem ale nie usuwaj komentów.

    Fajnie jakby poniższe funkcje można było po prostu kliknąć
w licie rozwijanej w polu funkcji. Dopisać więcej.
Można zrobić zczytywanie z pliku .txt po linijce zapisane tam funkcje.
Ciekawe funkcje:
    pow(16*(x*y)*(1-x)*(1-y)*sin(9*pi*x)*sin(9*pi*y),2)*(-1)

    W mainwindow.py inaczej można zrobić te metody __...ValueChanged, które dopasowują
to żeby min < max, bo czasami jest to irytujące. Ja bym raczej zablokował przycisk akceptacji
w przypadku kiedy min > max i dał o tym jakąs informacęję.
Jeli Ci to opowiada to mogę zaimplementować, bo już to robiłem w mainwindow.

    Ew. można zmienić tak, żeby wyjątki zwracane przez Variable Parser
w języku polskim.

    __functionValueChanged(self): # Wiesz jak tu zrobić default color? ----> Najprościej w css

TODO:
1. Dodać wyrysowywanie punktów na wykresie.
2. Dokończyć to okno z rozwiązaniami.
3. Blokada przycisku zamiast zmiany wartości min max
4. Lista predefiniowanych funkcji

Error List:
1. plotData() z plotwidget.py rzuca wyjątkiem ZeroDivisionError gdy nie wpiszemy parametrów w BandwidthDialog.
Dodałem try except ale trzeba się zastanowić co z tym zrobić
2. W okienkach powinna być możliwosć wpisania wiecej niż 2 cyfr po przecinku.